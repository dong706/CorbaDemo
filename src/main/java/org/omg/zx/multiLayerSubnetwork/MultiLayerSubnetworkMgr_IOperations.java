package org.omg.zx.multiLayerSubnetwork;

/**
 *	Generated from IDL interface "MultiLayerSubnetworkMgr_I"
 *	@author JacORB IDL compiler V 2.2.3, 10-Dec-2005
 */


public interface MultiLayerSubnetworkMgr_IOperations
	extends org.omg.zx.common.Common_IOperations
{
	/* constants */
	/* operations  */
	void getAllTopologicalLinks(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.topologicalLink.TopologicalLinkList_THolder topoList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllTopologicalLinksByIterator(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, int how_many, org.omg.zx.topologicalLink.TopologicalLinkList_THolder topoList, org.omg.zx.topologicalLink.TopologicalLinkIterator_IHolder topoIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getMultiLayerSubnetwork(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.multiLayerSubnetwork.MultiLayerSubnetwork_THolder subnetwork) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllSubnetworkConnections(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, short[] connectionRateList, int how_many, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder sncList, org.omg.zx.subnetworkConnection.SNCIterator_IHolder sncIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllSubnetworkConnectionsWithTP(org.omg.zx.globaldefs.NameAndStringValue_T[] tpName, short[] connectionRateList, int how_many, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder sncList, org.omg.zx.subnetworkConnection.SNCIterator_IHolder sncIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getSNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder snc) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getSNCsByUserLabel(java.lang.String userLabel, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder sncList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void createSNC(org.omg.zx.subnetworkConnection.SNCCreateData_T createData, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder theSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void activateSNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder theSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void createAndActivateSNC(org.omg.zx.subnetworkConnection.SNCCreateData_T createData, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder theSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void deactivateSNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder theSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void deleteSNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void deactivateAndDeleteSNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder theSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllTPPools(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetworkName, int how_many, org.omg.zx.terminationPoint.TerminationPointList_THolder tpList, org.omg.zx.terminationPoint.TerminationPointIterator_IHolder tpIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, boolean includeHigherOrderCCs, org.omg.zx.subnetworkConnection.Route_THolder route) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getRouteAndTopologicalLinks(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.Route_THolder route, org.omg.zx.topologicalLink.TopologicalLinkList_THolder topologicalLinkList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void modifySNC(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, java.lang.String routeId, org.omg.zx.subnetworkConnection.SNCModifyData_T SNCModifyData, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.subnetworkConnection.ProtectionEffort_T tolerableImpactEffort, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.subnetworkConnection.SubnetworkConnection_THolder newSNC, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallsAndTopLevelConnections(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, int how_many, org.omg.zx.callSNC.CallAndTopLevelConnectionsList_THolder callAndTopLevelConnectionsList, org.omg.zx.callSNC.CallAndTopLevelConnectionsIterator_IHolder callAndTopLevelConnectionsIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallsAndTopLevelConnectionsAndSNCs(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, int how_many, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsList_THolder callAndTopLevelConnectionsAndSNCsList, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsIterator_IHolder callAndTopLevelConnectionsAndSNCsIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallsAndTopLevelConnectionsWithME(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.globaldefs.NameAndStringValue_T[] meName, int how_many, org.omg.zx.callSNC.CallAndTopLevelConnectionsList_THolder callAndTopLevelConnectionsList, org.omg.zx.callSNC.CallAndTopLevelConnectionsIterator_IHolder callAndTopLevelConnectionsIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallsAndTopLevelConnectionsAndSNCsWithME(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.globaldefs.NameAndStringValue_T[] meName, int how_many, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsList_THolder callAndTopLevelConnectionsAndSNCsList, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsIterator_IHolder callAndTopLevelConnectionsAndSNCsIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallsAndTopLevelConnectionsAndSNCsWithTP(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.globaldefs.NameAndStringValue_T[] tPName, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsList_THolder callAndTopLevelConnectionsAndSNCsList, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCsIterator_IHolder callAndTopLevelConnectionsAndSNCsIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallIdsWithTP(org.omg.zx.globaldefs.NameAndStringValue_T[] tPName, org.omg.zx.callSNC.CallIdList_THolder callIdList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllCallIdsWithSNPPOrTNAName(org.omg.zx.globaldefs.NameAndStringValue_T SNPPOrTNAName, org.omg.zx.callSNC.CallIdList_THolder callIdList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getCallAndTopLevelConnectionsAndSNCs(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.callSNC.CallAndTopLevelConnectionsAndSNCs_THolder callAndTopLevelConnectionsAndSNCs) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void establishCall(org.omg.zx.callSNC.CallCreateData_T callCreateData, org.omg.zx.subnetworkConnection.SNCCreateData_T[] connectionCreateDataList, java.lang.String routeGroupsNumber, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.callSNC.CallAndTopLevelConnections_THolder callAndTopLevelConnections, org.omg.zx.subnetworkConnection.SNCCreateDataList_THolder connectionsNotCreated, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder partialSNCs, org.omg.CORBA.StringHolder callErrorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void modifyCall(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.callSNC.CallModifyData_T callModifyData, org.omg.zx.callSNC.Call_THolder modifiedCall) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void releaseCall(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder remainingSNCs, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getCall(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.callSNC.Call_THolder theCall) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void addConnections(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.subnetworkConnection.SNCCreateData_T[] connectionsToAdd, boolean connectionRouteReArrangementAllowed, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder connectionList, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder partialSNCs, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void removeConnections(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.globaldefs.NameAndStringValue_T[][] connectionNamesList, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.subnetworkConnection.SubnetworkConnectionList_THolder sNCsNotDeleted, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getConnectionsAndRouteDetails(java.lang.String callID, org.omg.zx.globaldefs.NameAndStringValue_T[] mLRAName, java.lang.String sNPOrSNPPID, boolean mLSNPPLinkRequested, java.lang.String routeType, org.omg.zx.callSNC.SNCAndRouteList_THolder connectionAndRouteList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void modifyDiversityAndCorouting(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, org.omg.zx.callSNC.Diversity_T callDiversity, org.omg.zx.callSNC.RouteGroupInfo_T[] routeGroupInfoList, boolean connectionRouteReArrangementAllowed, java.lang.String routeGroupsNumber, org.omg.zx.callSNC.CallAndTopLevelConnections_THolder callAndTopLevelConnections) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getBackupRoutes(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, java.lang.String routeId, boolean includeHigherOrderCCs, org.omg.zx.globaldefs.NVSList_THolder additionalInfo, org.omg.zx.subnetworkConnection.RouteList_THolder routeList) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void switchRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, java.lang.String routeId, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.multiLayerSubnetwork.EMSFreedomLevel_T emsFreedomLevel, org.omg.zx.subnetworkConnection.TPDataList_THolder tpsToModify, org.omg.zx.globaldefs.NVSList_THolder additionalInfo, org.omg.zx.subnetworkConnection.SNCState_THolder sncState, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void addRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.RouteCreateData_T createRoute, org.omg.zx.subnetworkConnection.GradesOfImpact_T tolerableImpact, org.omg.zx.multiLayerSubnetwork.EMSFreedomLevel_T emsFreedomLevel, org.omg.zx.subnetworkConnection.RouteDescriptor_THolder theRoute, org.omg.CORBA.StringHolder errorReason) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void removeRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, java.lang.String routeId, org.omg.zx.multiLayerSubnetwork.EMSFreedomLevel_T emsFreedomLevel, org.omg.zx.globaldefs.NVSList_THolder additionalInfo) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void setIntendedRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, java.lang.String routeId, org.omg.zx.globaldefs.NVSList_THolder additionalInfo) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getIntendedRoute(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, boolean includeHigherOrderCCs, org.omg.zx.globaldefs.NVSList_THolder additionalInfo, org.omg.zx.subnetworkConnection.Route_THolder route) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void setRoutesAdminState(org.omg.zx.globaldefs.NameAndStringValue_T[] sncName, org.omg.zx.subnetworkConnection.RouteNameAndAdminStateList_THolder routeNameAndAdminStateList, org.omg.zx.subnetworkConnection.SNCState_THolder sncState) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllSubordinateRAidsWithConnection(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, org.omg.zx.globaldefs.NameAndStringValue_T[] connection, java.lang.String routeType, org.omg.zx.multiLayerSubnetwork.RoutePerRouteType_THolder routePerRouteType) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getCallAndTopLevelConnections(org.omg.zx.globaldefs.NameAndStringValue_T[] callName, java.lang.String callId, org.omg.zx.callSNC.CallAndTopLevelConnections_THolder callAndTopLevelConnections) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getMLSNPPLink(org.omg.zx.globaldefs.NameAndStringValue_T[] mLSNPPLinkName, boolean sNPListRequested, org.omg.zx.mLSNPPLink.MultiLayerSNPPLink_THolder theMLSNPPLink) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllMLSNPPs(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, boolean sNPListRequested, int how_many, org.omg.zx.mLSNPP.MLSNPPList_THolder mLSNPPList, org.omg.zx.mLSNPP.MLSNPPIterator_IHolder mLSNPPIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllInternalMLSNPPLinks(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, boolean sNPListRequested, int how_many, org.omg.zx.mLSNPPLink.MLSNPPLinkList_THolder mLSNPPLinkList, org.omg.zx.mLSNPPLink.MLSNPPLinkIterator_IHolder mLSNPPLinkIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllEdgeMLSNPPLinks(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, boolean sNPListRequested, int how_many, org.omg.zx.mLSNPPLink.MLSNPPLinkList_THolder mLSNPPLinkList, org.omg.zx.mLSNPPLink.MLSNPPLinkIterator_IHolder mLSNPPLinkIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllSubordinateMLSNs(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, int how_many, org.omg.zx.multiLayerSubnetwork.SubnetworkList_THolder subordinateMLSNsList, org.omg.zx.multiLayerSubnetwork.SubnetworkIterator_IHolder subnetIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void getAllMLSNPPLinks(org.omg.zx.globaldefs.NameAndStringValue_T[] subnetName, boolean sNPListRequested, int how_many, org.omg.zx.mLSNPPLink.MLSNPPLinkList_THolder mLSNPPLinkList, org.omg.zx.mLSNPPLink.MLSNPPLinkIterator_IHolder mLSNPPLinkIt) throws org.omg.zx.globaldefs.ProcessingFailureException;
	void setSRG(java.lang.String srgId, int setOrRelase, org.omg.zx.globaldefs.NameAndStringValue_T[][] objectNames) throws org.omg.zx.globaldefs.ProcessingFailureException;
}
